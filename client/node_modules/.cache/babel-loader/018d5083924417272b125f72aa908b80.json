{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mern-App/client/src/pages/Register.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../store/actions/authActions\";\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: {}\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n      this.props.register({\n        name,\n        email,\n        password,\n        confirmPassword\n      }, this.props.history);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (JSON.stringify(nextProps.auth.error) !== JSON.stringify(prevState.error)) {\n      return {\n        error: nextProps.auth.error\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        name = _this$state2.name,\n        email = _this$state2.email,\n        password = _this$state2.password,\n        confirmPassword = _this$state2.confirmPassword,\n        error = _this$state2.error;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Register Here\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: error.name ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter Your Name\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), error.name && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, error.name)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Email: \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: error.email ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter Your Email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), error.email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, error.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: error.password ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter Your Password\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), error.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, error.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" Confirm Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      className: error.confirmPassword ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Confirm Your Password\",\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), error.confirmPassword && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, error.confirmPassword)), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Already Have Account? Login Here\"), React.createElement(\"button\", {\n      className: \"btn btn-primary my-3 d-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["/var/www/html/Mern-App/client/src/pages/Register.js"],"names":["React","Link","connect","register","Register","Component","state","name","email","password","confirmPassword","error","changeHandler","event","setState","target","value","submitHandler","preventDefault","props","history","getDerivedStateFromProps","nextProps","prevState","JSON","stringify","auth","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../store/actions/authActions\";\n\nclass Register extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    error: {}\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (\n      JSON.stringify(nextProps.auth.error) !== JSON.stringify(prevState.error)\n    ) {\n      return {\n        error: nextProps.auth.error\n      };\n    }\n    return null;\n  }\n\n  changeHandler = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    let { name, email, password, confirmPassword } = this.state;\n    this.props.register(\n      { name, email, password, confirmPassword },\n      this.props.history\n    );\n  };\n\n  render() {\n    let { name, email, password, confirmPassword, error } = this.state;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h1 className=\"text-center display-4\">Register Here</h1>\n          <form onSubmit={this.submitHandler}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\"> Name: </label>\n              <input\n                type=\"text\"\n                className={\n                  error.name ? \"form-control is-invalid\" : \"form-control\"\n                }\n                placeholder=\"Enter Your Name\"\n                name=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={this.changeHandler}\n              />\n              {error.name && (\n                <div className=\"invalid-feedback\">{error.name}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\"> Email: </label>\n              <input\n                type=\"email\"\n                className={\n                  error.email ? \"form-control is-invalid\" : \"form-control\"\n                }\n                placeholder=\"Enter Your Email\"\n                name=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={this.changeHandler}\n              />\n              {error.email && (\n                <div className=\"invalid-feedback\">{error.email}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\"> Password: </label>\n              <input\n                type=\"password\"\n                className={\n                  error.password ? \"form-control is-invalid\" : \"form-control\"\n                }\n                placeholder=\"Enter Your Password\"\n                name=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={this.changeHandler}\n              />\n              {error.password && (\n                <div className=\"invalid-feedback\">{error.password}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\"> Confirm Password: </label>\n              <input\n                type=\"password\"\n                className={\n                  error.confirmPassword\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                placeholder=\"Confirm Your Password\"\n                name=\"confirmPassword\"\n                id=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={this.changeHandler}\n              />\n              {error.confirmPassword && (\n                <div className=\"invalid-feedback\">{error.confirmPassword}</div>\n              )}\n            </div>\n            <Link to=\"/login\">Already Have Account? Login Here</Link>\n            <button className=\"btn btn-primary my-3 d-block\">Register</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { register }\n)(Register);\n"]},"metadata":{},"sourceType":"module"}