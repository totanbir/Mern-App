{"ast":null,"code":"import Axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport * as Types from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nexport const register = (user, history) => dispatch => {\n  Axios.post('/api/users/register', user).then(res => {\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: {}\n      }\n    });\n    console.log(res);\n    history.push('/login');\n  }).catch(error => {\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};\nexport const login = (user, history) => dispatch => {\n  Axios.post('/api/users/login', user).then(res => {\n    let token = res.data.token;\n    localStorage.setItem('auth_token', token);\n    setAuthToken(token);\n    let decode = jwtDecode(token);\n    dispatch({\n      type: Types.SET_USER,\n      payload: {\n        user: decode\n      }\n    });\n    history.push('/');\n  }).catch(error => {\n    console.log(error.response.data);\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};\nexport const logout = history => {\n  localStorage.removeItem('auth_token');\n  history.push('/login');\n  return {\n    type: Types.SET_USER,\n    payload: {\n      user: {}\n    }\n  };\n};","map":{"version":3,"sources":["/var/www/html/Mern-App/client/src/store/actions/authActions.js"],"names":["Axios","jwtDecode","Types","setAuthToken","register","user","history","dispatch","post","then","res","type","USERS_ERROR","payload","error","console","log","push","catch","response","data","login","token","localStorage","setItem","decode","SET_USER","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmBC,QAAQ,IAAI;AACnDP,EAAAA,KAAK,CAACQ,IAAN,CAAW,qBAAX,EAAkCH,IAAlC,EACKI,IADL,CACWC,GAAD,IAAS;AACXH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,KAAK,CAACU,WADP;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF;AAFJ,KAAD,CAAR;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAJ,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACH,GAVL,EAWKC,KAXL,CAWWJ,KAAK,IAAI;AACZP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,KAAK,CAACU,WADP;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAEA,KAAK,CAACK,QAAN,CAAeC;AADjB;AAFJ,KAAD,CAAR;AAMH,GAlBL;AAmBH,CApBM;AAsBP,OAAO,MAAMC,KAAK,GAAG,CAAChB,IAAD,EAAOC,OAAP,KAAmBC,QAAQ,IAAI;AAChDP,EAAAA,KAAK,CAACQ,IAAN,CAAW,kBAAX,EAA+BH,IAA/B,EACCI,IADD,CACMC,GAAG,IAAI;AACT,QAAIY,KAAK,GAAGZ,GAAG,CAACU,IAAJ,CAASE,KAArB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,KAAnC;AACAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AACA,QAAIG,MAAM,GAAGxB,SAAS,CAACqB,KAAD,CAAtB;AACAf,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,KAAK,CAACwB,QADP;AAELb,MAAAA,OAAO,EAAE;AACLR,QAAAA,IAAI,EAAEoB;AADD;AAFJ,KAAD,CAAR;AAMAnB,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH,GAbD,EAcCC,KAdD,CAcOJ,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,QAAN,CAAeC,IAA3B;AACAb,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,KAAK,CAACU,WADP;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAEA,KAAK,CAACK,QAAN,CAAeC;AADjB;AAFJ,KAAD,CAAR;AAMH,GAtBD;AAuBH,CAxBM;AA0BP,OAAO,MAAMO,MAAM,GAAGrB,OAAO,IAAI;AAC7BiB,EAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAtB,EAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACA,SAAO;AACHN,IAAAA,IAAI,EAAET,KAAK,CAACwB,QADT;AAEHb,IAAAA,OAAO,EAAE;AACLR,MAAAA,IAAI,EAAE;AADD;AAFN,GAAP;AAMH,CATM","sourcesContent":["import Axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport * as Types from './types'\nimport setAuthToken from '../../utils/setAuthToken'\n\n\nexport const register = (user, history) => dispatch => {\n    Axios.post('/api/users/register', user)\n        .then((res) => {\n            dispatch({\n                type: Types.USERS_ERROR,\n                payload: {\n                    error: {}\n                }\n            })\n            console.log(res)\n            history.push('/login')\n        })\n        .catch(error => {\n            dispatch({\n                type: Types.USERS_ERROR,\n                payload: {\n                    error: error.response.data\n                }\n            })\n        })\n}\n\nexport const login = (user, history) => dispatch => {\n    Axios.post('/api/users/login', user)\n    .then(res => {\n        let token = res.data.token\n        localStorage.setItem('auth_token', token)\n        setAuthToken(token)\n        let decode = jwtDecode(token)\n        dispatch({\n            type: Types.SET_USER,\n            payload: {\n                user: decode\n            }\n        })\n        history.push('/')\n    })\n    .catch(error => {\n        console.log(error.response.data)\n        dispatch({\n            type: Types.USERS_ERROR,\n            payload: {\n                error: error.response.data\n            }\n        })\n    })\n}\n\nexport const logout = history => {\n    localStorage.removeItem('auth_token')\n    history.push('/login')\n    return {\n        type: Types.SET_USER,\n        payload: {\n            user: {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}