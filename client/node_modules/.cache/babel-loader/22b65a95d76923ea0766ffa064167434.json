{"ast":null,"code":"import * as Types from '../actions/types';\n\nconst transactionReducer = (state = [], action) => {\n  switch (action.type) {\n    case Types.LOAD_TRANSACTIONS:\n      {\n        return action.payload.transactions;\n      }\n\n    case Types.CREATE_TRANSACTION:\n      {\n        let transactions = [...state];\n        transactions.unshift(action.payload.transaction);\n        return transactions;\n      }\n\n    case Types.REMOVE_TRANSACTION:\n      {\n        let transactions = [...state];\n        return transactions.filter(tran => {\n          return tran._id !== action.payload.id;\n        });\n      }\n\n    case Types.UPDATE_TRANSACTION:\n      {\n        let transactions = [...state];\n        return transactions.map(tran => {\n          if (tran._id === action.payload.transaction._id) {\n            return action.payload.transaction;\n          }\n\n          return tran;\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;","map":{"version":3,"sources":["/var/www/html/marn-apps/client/src/store/reducers/transactionReducer.js"],"names":["Types","transactionReducer","state","action","type","LOAD_TRANSACTIONS","payload","transactions","CREATE_TRANSACTION","unshift","transaction","REMOVE_TRANSACTION","filter","tran","_id","id","UPDATE_TRANSACTION","map"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACK,iBAAX;AAA8B;AAC1B,eAAOF,MAAM,CAACG,OAAP,CAAeC,YAAtB;AACH;;AACD,SAAKP,KAAK,CAACQ,kBAAX;AAA+B;AAC3B,YAAID,YAAY,GAAG,CAAC,GAAGL,KAAJ,CAAnB;AACAK,QAAAA,YAAY,CAACE,OAAb,CAAqBN,MAAM,CAACG,OAAP,CAAeI,WAApC;AACA,eAAOH,YAAP;AACH;;AACD,SAAKP,KAAK,CAACW,kBAAX;AAA+B;AAC3B,YAAIJ,YAAY,GAAG,CAAC,GAAGL,KAAJ,CAAnB;AACA,eAAOK,YAAY,CAACK,MAAb,CAAoBC,IAAI,IAAI;AAC/B,iBAAOA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACG,OAAP,CAAeS,EAAnC;AACH,SAFM,CAAP;AAGH;;AACD,SAAKf,KAAK,CAACgB,kBAAX;AAA+B;AAC3B,YAAIT,YAAY,GAAG,CAAC,GAAGL,KAAJ,CAAnB;AACA,eAAOK,YAAY,CAACU,GAAb,CAAiBJ,IAAI,IAAI;AAC5B,cAAIA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACG,OAAP,CAAeI,WAAf,CAA2BI,GAA5C,EAAiD;AAC7C,mBAAOX,MAAM,CAACG,OAAP,CAAeI,WAAtB;AACH;;AACD,iBAAOG,IAAP;AACH,SALM,CAAP;AAMH;;AACD;AAAS,aAAOX,KAAP;AAxBb;AA0BH,CA3BD;;AA6BA,eAAeD,kBAAf","sourcesContent":["import * as Types from '../actions/types'\n\nconst transactionReducer = (state = [], action) => {\n    switch (action.type) {\n        case Types.LOAD_TRANSACTIONS: {\n            return action.payload.transactions\n        }\n        case Types.CREATE_TRANSACTION: {\n            let transactions = [...state]\n            transactions.unshift(action.payload.transaction)\n            return transactions\n        }\n        case Types.REMOVE_TRANSACTION: {\n            let transactions = [...state]\n            return transactions.filter(tran => {\n                return tran._id !== action.payload.id\n            })\n        }\n        case Types.UPDATE_TRANSACTION: {\n            let transactions = [...state]\n            return transactions.map(tran => {\n                if (tran._id === action.payload.transaction._id) {\n                    return action.payload.transaction\n                }\n                return tran\n            })\n        }\n        default: return state\n    }\n}\n\nexport default transactionReducer"]},"metadata":{},"sourceType":"module"}